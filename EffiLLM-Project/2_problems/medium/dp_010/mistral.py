# Generated by Mistral 7B via Ollama

class Solution:
    def maxAlternatingSum(self, nums):
        n = len(nums)
        dp_even = [0]*n
        dp_odd = [0]*n
        max_even, max_odd = 0, 0
        for i in range(n):
            if i == 0:
                dp_even[i] = nums[i]
                dp_odd[i] = -nums[i]
            else:
                dp_even[i] = max(dp_even[i-2] + nums[i], nums[i])
                dp_odd[i] = max(dp_odd[i-1] - nums[i], -nums[i])
            max_even, max_odd = max(max_even, sum(dp_even[:i+1]), key=abs), max(max_odd, sum(dp_odd[:i+1]), key=abs)
        return max(max_even, max_odd)

