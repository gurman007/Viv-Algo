# Re-generated by Mistral 7B via Ollama

class Solution:
    def squareFreeSubsets(self, nums):
        mod = 10**9 + 7
        n = len(nums)
        dp = [[0]*(n//2+1) for _ in range(n)]
        sqrs = set([i*i for i in range(1,31)])

        for i in range(n):
            for j in range(i+1, n):
                if nums[i]%2==0 and nums[j]%2==0: continue
                sqr = (nums[i]*nums[j])**0.5
                dp[i][min(n//2, j)] += 1 - int((sqrs&(1<<sqr))>>sqr)

        res = 0
        for i in range(n):
            for j in range(min(n//2, i)):
                res = (res + dp[i][j])%mod

        return (res*res)%mod

