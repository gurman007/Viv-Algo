# Generated by Mistral 7B via Ollama
import functools

class Solution:
    def numWays(self, steps: int, arrLen: int) -> int:
        @functools.lru_cache(maxsize=None)
        def ways(pos, curSteps):
            if pos < 0 or pos > arrLen - 1:
                return 0
            if curSteps == 0:
                return 1 if pos == 0 else 0
            return (ways(pos + 1, curSteps - 1) + ways(pos - 1, curSteps - 1) + ways(pos, curSteps - 1)) % (10**9 + 7)
        return ways(0, steps) % (10**9 + 7)
