# Generated by Mistral 7B via Ollama

class Solution:
    def dieSimulator(self, rollMax, n):
        mod = 10**9 + 7
        dp = [[0] * (n+1) for _ in range(7)]
        for i in range(1, len(rollMax)+1):
            cur = [0] * (n+1)
            for j in range(1, min(i, n)+1):
                for k in range(1, max(1, i-j)+1):
                    cur[j] += dp[k-1][j-k]
                    if k < i:
                        cur[j] -= dp[k][j-k] * (rollMax[k-1] - 1) if rollMax[k-1] > 1 else dp[k][j-k]
            for j in range(1, n+1):
                dp[i][j] = (cur[j] + mod) % mod
        return sum(dp[-1]) % mod

