# Generated by Mistral 7B via Ollama

class Solution:
    def maxDotProduct(self, nums1, nums2):
        m = len(nums1)
        n = len(nums2)
        dp = [[0] * (n + 1) for _ in range(m)]
        dp[-1][-1] = nums1[-1] if n else 0
        for i in range(m - 1, -1, -1):
            for j in range(n - 1, -1, -1):
                dp[i][j] = max((nums1[i] + dp[i+1][j]), (dp[i][j+1]))
        dp[0][0] = nums1[0] * nums2[0] if m and n else 0
        for i in range(1, m):
            for j in range(1, n):
                dp[i][j] = max((nums1[i] + dp[i-1][j]), (dp[i][j-1]))
        return max(dp[-1][-1], *dp)

