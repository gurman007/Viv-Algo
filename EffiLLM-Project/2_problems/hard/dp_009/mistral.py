# Re-generated by Mistral 7B via Ollama

class Solution:
    def beautifulPartitions(s, k, minLength):
        prime = set('2357')
        nonPrime = set(str(i) for i in range(10)) - prime

    def isBeautiful(sub):
        return sub[0] in prime and sub[-1] not in prime

    def countPartitions(left, count=1):
        if not left:
            return 1 if count == k else 0
        total = 0
        for i in range(minLength-1, len(left)+1):
            for j in range(i, min(len(left), i+minLength)):
                sub = left[i:j]
                if isBeautiful(sub):
                    rest = countPartitions(left[j:], count-1)
                    total += (rest % (10**9 + 7)) * (len(sub)-i+1)
        return total % (10**9 + 7)

    return countPartitions(s)