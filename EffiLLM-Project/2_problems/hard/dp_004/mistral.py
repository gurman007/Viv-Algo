# Generated by Mistral 7B via Ollama

class Solution:
    def sellingWood(self, m, n, prices):
        dp = [[[0] * (n + 1) for _ in range(m + 1)] for _ in range(len(prices) + 1)]

        for i in range(1, len(prices) + 1):
            for h in range(min(prices[i - 1][0]), m + 1):
                for w in range(min(prices[i - 1][1], n + 1)):
                    dp[i][h][w] = max(dp[i][h][w], prices[i - 1][2] + dp[i - 1][h - prices[i - 1][0]][w])
                    if w < prices[i - 1][1]:
                        dp[i][h][w + 1] = max(dp[i][h][w + 1], dp[i - 1][h][w])
                    if h < prices[i - 1][0]:
                        dp[i][h + 1][w] = max(dp[i][h + 1][w], dp[i - 1][h][w])

        return dp[-1][-1][-1]

